%h1= (@note.new_record?) ? 'Create note' : 'Edit note'

- if @note.errors.any?
  #error_explanation
    %h2= pluralize(@note.errors.count, t(:error)).html_safe + t(:_prohibited_this_note_from_being_saved)
    %ul
      - @note.errors.full_messages.each do |msg|
        %li= msg

.elem.generic_form
  = form_for @note, as: :note, url: "/notes/#{@note.id}" do |f|
    .elem
      .labels
        = f.label :value
      = f.text_field :value, class: "form-control"

    = f.hidden_field :user_id, "data-bind" => "value: userId"

    .elem
      .labels
        = label_tag :user_email
      = text_field_tag :user_email, f.object.user.nil? ? "" : f.object.user.email, "data-bind" => "value: email, valueUpdate: 'afterkeydown'", class: "form-control"

      .results.well{ "data-bind" => "visible: showUserResults" }
        %h5
          Please select from the list below (If the user is not found, then no user will be set)
        %span{ "data-bind" => "template: { name: 'users', foreach: emailList }" }

      %script{ "id" => "users", "type" => "text/html" }
        .clickable{ "data-bind" => "text: email, click: $parent.selectUser" }

    .btn-group.submit_field
      - if @note.new_record?
        = f.submit 'Create', class: 'btn btn-success'
      - else
        = f.submit 'Update', class: 'btn btn-success'
        = link_to 'Show', @note, { class: 'btn btn-default' }

      = link_to 'Back', notes_path, { class: 'btn btn-default' }

:javascript

  var initial_user = $('#user_email').val(),
    initial_user_id = $('#note_user_id').val(),
    viewModel = { email: ko.observable(initial_user || ''),
      userId: ko.observable(initial_user_id || ''),
      showUserResults: ko.observable(false),
      emailList: ko.observableArray() };

  viewModel.email.subscribe(function (partial) {
    if (partial === '') {
      viewModel.userId('');
    } else {
      var posting = {partial_email: ko.unwrap(partial)};
      $.ajax({
        url: '#{search_users_path}',
        dataType: 'json',
        method: 'post',
        data: posting,
        success: function (results) {
          // If the only result is the partial, then hide results
          if (results.length === 1 && results[0].email === partial) {
            viewModel.showUserResults(false);
          } else {
            viewModel.showUserResults(true);
          }
          viewModel.emailList(results);
        },
        error: function (jqXHR, textStatus, errorThrown) {
          alert(jqXHR.responseText);
        }
      });
    }
  });

  viewModel.selectUser = function (data) {
    viewModel.email(data.email);
  };

  //Before form submits check if the user id can be updated
  $('#edit_note').submit(function () {
    if ($('.results .clickable:hidden').length === 1) {
      if (viewModel.emailList()[0].email === viewModel.email()) {
        viewModel.userId(viewModel.emailList()[0].id);
      }
    }
  });

  ko.applyBindings(viewModel);