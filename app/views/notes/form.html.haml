%h1= (@note.new_record?) ? 'Create note' : 'Edit note'

- if @note.errors.any?
  #error_explanation
    %h2= pluralize(@note.errors.count, t(:error)).html_safe + t(:_prohibited_this_note_from_being_saved)
    %ul
      - @note.errors.full_messages.each do |msg|
        %li= msg

.elem.generic_form
  = form_for @note, as: :note, url: "/notes/#{@note.id}" do |f|
    .elem
      .labels
        = f.label :value
      = f.text_field :value, class: "form-control"

    = f.hidden_field :user_id

    .elem
      .labels
        = label_tag :user_email
      = text_field_tag :user_email, f.object.user.nil? ? "" : f.object.user.email, "data-bind" => "value: email, valueUpdate: 'afterkeydown'", class: "form-control"
      .results.well

    .btn-group.submit_field
      - if @note.new_record?
        = f.submit 'Create', class: 'btn btn-success'
      - else
        = f.submit 'Update', class: 'btn btn-success'
        = link_to 'Show', @note, { class: 'btn btn-default' }

      = link_to 'Back', notes_path, { class: 'btn btn-default' }

:javascript
  $('.results').hide();

  var initial_user = $('#user_email').val(),
    viewModel = { email: ko.observable(initial_user || '') };

  viewModel.email.subscribe(function (partial) {
    if (partial === '') {
      $('#note_user_id').val('');
    } else {
      var posting = {partial_email: ko.unwrap(partial)};
      $.ajax({
        url: '#{search_users_path}',
        method: 'post',
        data: posting,
        success: function (results) {
          $('.results').html(results);
          
          if (results.match(/selection/) === null) {
            $('.results').show();
            $('#note_user_id').val('');
            $('.results').
              html("User email doesn't match records. Updating will clear this note's user");
          } else {
            $('.results').show();

            $('.selection').on('click', function (e) {
              $('#note_user_id').val(e.currentTarget.id);
              $('#user_email').val(e.currentTarget.innerText);
              $('.results').hide();
            });
          }
        },
        error: function (jqXHR, textStatus, errorThrown) {
          alert(jqXHR.responseText);
        }
      });
    }
  });

  //Before form submits check if the user id can be updated
  $('#edit_note').submit(function () {
    if ($('.selection:visible').length > 0) {
      var current_partial_email = $('#user_email').val();
      
      $('.selection').each(function (i, selection) { 
        if (selection.innerText === current_partial_email) {
          $('#note_user_id').val(selection.id);
        }
      });
    }
  });

  ko.applyBindings(viewModel);